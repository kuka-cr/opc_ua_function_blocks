/**
* Prosys OPC UA Java SDK
*
* Copyright (c) Prosys PMS Ltd., http://www.prosysopc.com.
* All rights reserved.
*/

/**
* DO NOT EDIT THIS FILE DIRECTLY! It is generated and will be overwritten on regeneration.
*/

package com.kuka.cr.opcua.kukadatatypes;

import com.prosysopc.ua.TypeDefinitionId;
import org.opcfoundation.ua.builtintypes.ExpandedNodeId;
import org.opcfoundation.ua.builtintypes.Structure;
import org.opcfoundation.ua.utils.ObjectUtils;
import java.util.*;

@TypeDefinitionId("nsu=http://kuka.com/kuka_datatypes/;i=3002")
public class E6POS implements Structure, Cloneable {
    public static ExpandedNodeId BINARY = ExpandedNodeId.parseExpandedNodeId("nsu=http://kuka.com/kuka_datatypes/;i=5001");
    public static ExpandedNodeId ID = ExpandedNodeId.parseExpandedNodeId("nsu=http://kuka.com/kuka_datatypes/;i=3002");
    public static ExpandedNodeId XML = ExpandedNodeId.parseExpandedNodeId("nsu=http://kuka.com/kuka_datatypes/;i=5002");

    protected Double X;
    protected Double Y;
    protected Double Z;
    protected Double A;
    protected Double B;
    protected Double C;
    protected Short S;
    protected Short T;
    protected Double E1;
    protected Double E2;
    protected Double E3;
    protected Double E4;
    protected Double E5;
    protected Double E6;

	public E6POS() {}

	public E6POS(Double X, Double Y, Double Z, Double A, Double B, Double C, Short S, Short T, Double E1, Double E2, Double E3, Double E4, Double E5, Double E6)
	{
		this.X = X;
		this.Y = Y;
		this.Z = Z;
		this.A = A;
		this.B = B;
		this.C = C;
		this.S = S;
		this.T = T;
		this.E1 = E1;
		this.E2 = E2;
		this.E3 = E3;
		this.E4 = E4;
		this.E5 = E5;
		this.E6 = E6;
	}

	public Double getX() {
		return X;
	}

	public void setX(Double X) {
		this.X = X;
	}

	public Double getY() {
		return Y;
	}

	public void setY(Double Y) {
		this.Y = Y;
	}

	public Double getZ() {
		return Z;
	}

	public void setZ(Double Z) {
		this.Z = Z;
	}

	public Double getA() {
		return A;
	}

	public void setA(Double A) {
		this.A = A;
	}

	public Double getB() {
		return B;
	}

	public void setB(Double B) {
		this.B = B;
	}

	public Double getC() {
		return C;
	}

	public void setC(Double C) {
		this.C = C;
	}

	public Short getS() {
		return S;
	}

	public void setS(Short S) {
		this.S = S;
	}

	public Short getT() {
		return T;
	}

	public void setT(Short T) {
		this.T = T;
	}

	public Double getE1() {
		return E1;
	}

	public void setE1(Double E1) {
		this.E1 = E1;
	}

	public Double getE2() {
		return E2;
	}

	public void setE2(Double E2) {
		this.E2 = E2;
	}

	public Double getE3() {
		return E3;
	}

	public void setE3(Double E3) {
		this.E3 = E3;
	}

	public Double getE4() {
		return E4;
	}

	public void setE4(Double E4) {
		this.E4 = E4;
	}

	public Double getE5() {
		return E5;
	}

	public void setE5(Double E5) {
		this.E5 = E5;
	}

	public Double getE6() {
		return E6;
	}

	public void setE6(Double E6) {
		this.E6 = E6;
	}


	/**
	* Deep clone
	*
	* @return cloned E6POS
	*/
	public E6POS clone()
	{
		E6POS result = new E6POS();
		result.X = X;
		result.Y = Y;
		result.Z = Z;
		result.A = A;
		result.B = B;
		result.C = C;
		result.S = S;
		result.T = T;
		result.E1 = E1;
		result.E2 = E2;
		result.E3 = E3;
		result.E4 = E4;
		result.E5 = E5;
		result.E6 = E6;
		return result;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		E6POS other = (E6POS) obj;
		if (X==null) {
			if (other.X != null) 
				return false;
		} 
		else if (!X.equals(other.X)) 
			return false;
		if (Y==null) {
			if (other.Y != null) 
				return false;
		} 
		else if (!Y.equals(other.Y)) 
			return false;
		if (Z==null) {
			if (other.Z != null) 
				return false;
		} 
		else if (!Z.equals(other.Z)) 
			return false;
		if (A==null) {
			if (other.A != null) 
				return false;
		} 
		else if (!A.equals(other.A)) 
			return false;
		if (B==null) {
			if (other.B != null) 
				return false;
		} 
		else if (!B.equals(other.B)) 
			return false;
		if (C==null) {
			if (other.C != null) 
				return false;
		} 
		else if (!C.equals(other.C)) 
			return false;
		if (S==null) {
			if (other.S != null) 
				return false;
		} 
		else if (!S.equals(other.S)) 
			return false;
		if (T==null) {
			if (other.T != null) 
				return false;
		} 
		else if (!T.equals(other.T)) 
			return false;
		if (E1==null) {
			if (other.E1 != null) 
				return false;
		} 
		else if (!E1.equals(other.E1)) 
			return false;
		if (E2==null) {
			if (other.E2 != null) 
				return false;
		} 
		else if (!E2.equals(other.E2)) 
			return false;
		if (E3==null) {
			if (other.E3 != null) 
				return false;
		} 
		else if (!E3.equals(other.E3)) 
			return false;
		if (E4==null) {
			if (other.E4 != null) 
				return false;
		} 
		else if (!E4.equals(other.E4)) 
			return false;
		if (E5==null) {
			if (other.E5 != null) 
				return false;
		} 
		else if (!E5.equals(other.E5)) 
			return false;
		if (E6==null) {
			if (other.E6 != null) 
				return false;
		} 
		else if (!E6.equals(other.E6)) 
			return false;
		return true;
	}
	
	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime * result
			+ ((X == null) ? 0 : X.hashCode())
			+ ((Y == null) ? 0 : Y.hashCode())
			+ ((Z == null) ? 0 : Z.hashCode())
			+ ((A == null) ? 0 : A.hashCode())
			+ ((B == null) ? 0 : B.hashCode())
			+ ((C == null) ? 0 : C.hashCode())
			+ ((S == null) ? 0 : S.hashCode())
			+ ((T == null) ? 0 : T.hashCode())
			+ ((E1 == null) ? 0 : E1.hashCode())
			+ ((E2 == null) ? 0 : E2.hashCode())
			+ ((E3 == null) ? 0 : E3.hashCode())
			+ ((E4 == null) ? 0 : E4.hashCode())
			+ ((E5 == null) ? 0 : E5.hashCode())
			+ ((E6 == null) ? 0 : E6.hashCode())
		;
		return result;
	}
    	
	public String toString() {
		return "E6POS: "+ObjectUtils.printFieldsDeep(this);
	}

	public ExpandedNodeId getTypeId() {
		return ID;
	}

	public ExpandedNodeId getXmlEncodeId() {
		return XML;
	}

	public ExpandedNodeId getBinaryEncodeId() {
		return BINARY;
	}
}
