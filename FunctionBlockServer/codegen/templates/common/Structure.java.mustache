{:targets [:Structure]}
---
/**
* Prosys OPC UA Java SDK
*
* Copyright (c) Prosys PMS Ltd., http://www.prosysopc.com.
* All rights reserved.
*/

/**
* DO NOT EDIT THIS FILE DIRECTLY! It is generated and will be overwritten on regeneration.
*/

package {{package}};

{{#dependencies}}
import {{package}}.{{class}};
{{/dependencies}}
import java.util.*;

{{#description?}}
    /**
	{{#description}}
        * {{.}}
	{{/description}}
    */
{{/description?}}
@TypeDefinitionId("nsu={{nodeid.namespace}};{{nodeid.id}}")
public class {{classname}} {{#has-supertype?}}extends {{supertype.type}} {{/has-supertype?}}implements Structure, Cloneable {
    {{#binary-encoding}}
    public static ExpandedNodeId BINARY = ExpandedNodeId.parseExpandedNodeId("nsu={{nodeid.namespace}};{{nodeid.id}}");
    {{/binary-encoding}}
    public static ExpandedNodeId ID = ExpandedNodeId.parseExpandedNodeId("nsu={{nodeid.namespace}};{{nodeid.id}}");
    {{#xml-encoding}}
    public static ExpandedNodeId XML = ExpandedNodeId.parseExpandedNodeId("nsu={{nodeid.namespace}};{{nodeid.id}}");
    {{/xml-encoding}}

	{{#fields}}
    protected {{> datatype_type}} {{name}};
	{{/fields}}

	public {{classname}}() {}

	{{#fields?}}
	public {{classname}}({{#fields}}{{> datatype_type}} {{name}}{{^last?}}, {{/last?}}{{/fields}})
	{
		{{#fields}}
		this.{{name}} = {{name}};
		{{/fields}}
	}
	{{/fields?}}

	{{#fields}}
	public {{> datatype_type}} get{{name}}() {
		return {{name}};
	}

	public void set{{name}}({{> datatype_type}} {{name}}) {
		this.{{name}} = {{name}};
	}

	{{/fields}}

	/**
	* Deep clone
	*
	* @return cloned {{classname}}
	*/
	public {{classname}} clone()
	{
		{{classname}} result = new {{classname}}();
		{{#fields}}
		result.{{name}} = {{name}};
		{{/fields}}
		return result;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		{{classname}} other = ({{classname}}) obj;
		{{#fields}}
		if ({{name}}==null) {
			if (other.{{name}} != null) 
				return false;
		} 
		else if (!{{#array?}}Arrays.equals({{name}}, other.{{name}}){{/array?}}{{^array?}}{{name}}.equals(other.{{name}}){{/array?}}) 
			return false;
		{{/fields}}
		return true;
	}
	
	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime * result
		{{#fields}}
			+ (({{name}} == null) ? 0 : {{#array?}}Arrays.hashCode({{name}}){{/array?}}{{^array?}}{{name}}.hashCode(){{/array?}})
		{{/fields}}
		;
		return result;
	}
    	
	public String toString() {
		return "{{classname}}: "+ObjectUtils.printFieldsDeep(this);
	}

	public ExpandedNodeId getTypeId() {
		return ID;
	}

	public ExpandedNodeId getXmlEncodeId() {
		return XML;
	}

	public ExpandedNodeId getBinaryEncodeId() {
		return BINARY;
	}
}
