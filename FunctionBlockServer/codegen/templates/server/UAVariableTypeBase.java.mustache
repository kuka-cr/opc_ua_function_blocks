{:targets [:VariableType]
 :package ".server"
 :name "NodeBase"}
---
/**
 * Prosys OPC UA Java SDK
 *
 * Copyright (c) Prosys PMS Ltd., http://www.prosysopc.com.
 * All rights reserved.
 */

/**
 * DO NOT EDIT THIS FILE DIRECTLY! It is generated and will be overwritten on regeneration.
*/

package {{package}};

{{#dependencies}}
import {{package}}.{{class}};
{{/dependencies}}
import {{supertype.package}}.server.{{supertype.type}}Node;
import {{raw-package}}.{{symbolicname}};
{{#objects}}
import {{typedefinition.package}}.server.{{type}}Node;
{{/objects}}
{{#datavariables}}
import {{typedefinition.package}}.server.{{type}}Node;
{{/datavariables}}
import com.prosysopc.ua.nodes.Mandatory;
import com.prosysopc.ua.nodes.Optional;
  
{{#description?}}
/**
{{#description}}
 * {{.}}
{{/description}}
 */
{{/description?}}
public abstract class {{classname}} extends {{supertype.type}}Node implements {{symbolicname}} {
  
  protected {{classname}}(NodeManagerUaNode nodeManager, NodeId nodeId, QualifiedName browseName, LocalizedText displayName) {
    super(nodeManager, nodeId, browseName, displayName);
  }  
 
  @Override
  public void afterCreate(){
    super.afterCreate();
    
    // Call afterCreate for each sub-node (if the node has any)
    {{#datavariables}}
    {{#mandatory?}}
    callAfterCreateIfExists(get{{> Variable}}Node());
    {{/mandatory?}}
    {{#optional?}}
    callAfterCreateIfExists(get{{> Variable}}Node());
    {{/optional?}}  
    {{/datavariables}}
    {{#objects}}
    {{#mandatory?}}
    callAfterCreateIfExists(get{{> Variable}}Node());
    {{/mandatory?}}
    {{#optional?}}
    callAfterCreateIfExists(get{{> Variable}}Node());
    {{/optional?}}
    {{/objects}}
  }
 
{{#properties}}
  {{>property_node_getter}}

  {{>property_value_getter}}

  {{>value_setter}}

{{/properties}}
{{#datavariables}}
  {{> node_getter}}

  {{> value_getter}}

  {{> value_setter}}

{{/datavariables}}  
}
